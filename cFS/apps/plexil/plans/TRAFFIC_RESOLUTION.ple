Boolean Lookup trafficConflict;
Real Lookup preferredTrack;
Real Lookup interceptHeading;

Boolean    Command CheckSafeToTurn(Real fromHeading,Real toHeading);

Command SetVel(Real velocity[3]);
Command pprint(...);


TRAFFIC_RESOLUTION:{
    Real prevVelCmd[3];
    InOut Boolean completionStatus;
    In Integer nextWP;
    In Real acPosition[3];
    In Real acVelocity[3];
    In Real resSpeed;

    Real velCmd[3];
    Real returnVel;
    Real trackPref;
    Real speed;
    Boolean returnSafe;
    Boolean statusTF;

    // Get traffic conflict status
    statusTF = Lookup(trafficConflict);

    // Preferred track angle
    trackPref = Lookup(preferredTrack);

    //pprint("preferred track:",trackPref);

    velCmd[0] = trackPref;
    velCmd[1] = resSpeed;
    velCmd[2] = 0;

    SetVel(velCmd);

    prevVelCmd[0] = velCmd[0];
    prevVelCmd[1] = velCmd[1];
    prevVelCmd[2] = velCmd[2];


    returnVel = Lookup(interceptHeading);

    //pprint("Return heading to plan:",returnVel);

    {
        EndCondition isKnown(returnSafe);
        returnSafe = CheckSafeToTurn(velCmd[0],returnVel);
    }

    //pprint("return, tfconflict:",returnSafe,statusTF);
    if(returnSafe && !statusTF){
       completionStatus = true;
    }endif

}